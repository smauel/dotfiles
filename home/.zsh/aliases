# general aliases
alias dotfiles="cd ${HOME}/dev/dotfiles"
alias vim=nvim
alias tmux='tmux -2'

# use a newer version of less than what comes with OSX by default
alias less=/usr/local/Cellar/less/551/bin/less

alias l='ls -hlFG'
alias ll='ls -ahlFG'
alias ls='ls -aFG'

alias cc='clear'

# List only directories
alias lsd="ls -lhFG | grep --color=never '^d'"
alias x='exit'
alias rm='rm -i'
alias tmux='tmux -2'
alias ping='prettyping --nolegend'
alias grep='grep --color=auto '
alias preview="fzf --preview 'bat --color \"always\" {}'"
alias b64='function(){echo $1 | base64}'
alias ub64='function(){echo $1 | base64 -D}'
alias password="head -c 62 /dev/urandom | /usr/bin/base64 -i - -o - | sed 's/[^a-zA-Z0-9]//g'"
alias uuid="uuidgen |tr '[:upper:]' '[:lower:]'"

# OS X has no `md5sum`, so use `md5` as a fallback
command -v md5sum > /dev/null || alias md5sum="md5"

# OS X has no `sha1sum`, so use `shasum` as a fallback
command -v sha1sum > /dev/null || alias sha1sum="shasum"

# git aliases
alias g='git'
alias gs='git s'
alias gl='git l'
alias glg='git lg'
alias gd='git d'
alias gdi='git di'
alias gdc='git di --cached'
alias gca='git ca'
alias ggo='git go'
alias gpr='git pr'
alias ga='git amend'
alias gdm='git dm'
alias gwc='git wc'
alias gp='git pull'
alias gco='git co'
alias gcm='git co master'
alias gb='git branch'

# docker aliases
alias d='docker'
alias dc='docker-compose'
alias dupapi='docker-compose up -d api'
alias dlogs='docker-compose logs -f'
alias dps='docker ps'
alias dpa='docker ps --all'
alias di='docker images'
alias drm='docker rm $(docker ps -aq)'
alias dri='docker rmi $(docker images -q)'
alias dstop='docker stop $(docker ps -aq)'
alias dprune='docker system prune && docker volume prune'

# aws aliases
function start-session() {
  local selected_profile=$(cat ~/.aws/config| awk '/\[profile.+\]/{ print substr($0, 10, length($0) - 10) }' | fzf --height 30% --reverse -1 -0 --header 'Select Profile')
  command aws-session --profile $selected_profile
}
alias ss='start-session'
alias assume-role='function(){eval $(command assume-role $@);}'
ams() {
  local profile

  profile=$(ls ~/dev/dominium/infrastructure/aws-manage-sg/*.json | fzf)
  aws-manage-sg -u smorrison -f $profile
}

# helm aliases
HELM="${HOME}/.helm"
HELM_DEV="${HOME}/.helm/dev"
HELM_DEMO="${HOME}/.helm/demo"
HELM_PROD="${HOME}/.helm/prod"
alias hdev="ln -sf ${HELM_DEV}/ca.cert.pem ${HELM}/ca.pem; ln -sf ${HELM_DEV}/helm.cert.pem ${HELM}/cert.pem; ln -sf ${HELM_DEV}/helm.key.pem ${HELM}/key.pem"
alias hdemo="ln -sf ${HELM_DEMO}/ca.cert.pem ${HELM}/ca.pem; ln -sf ${HELM_DEMO}/helm.cert.pem ${HELM}/cert.pem; ln -sf ${HELM_DEMO}/helm.key.pem ${HELM}/key.pem"
alias hprod="ln -sf ${HELM_PROD}/ca.cert.pem ${HELM}/ca.pem; ln -sf ${HELM_PROD}/helm.cert.pem ${HELM}/cert.pem; ln -sf ${HELM_PROD}/helm.key.pem ${HELM}/key.pem"

# fzf aliases
function fssh() {
  local selected_host=$(ag --ignore-case '^host [^*]' ~/.ssh/config | cut -d ' ' -f 2 | fzf --height 30% -1 -0 --header 'Select Host')
  ssh $selected_host
}
# fuzzy search and ssh onto gitlab instances
function fgitlab() {
  local ip
  local natdns

  natdns=$(aws ec2 describe-instances \
    --query "Reservations[*].Instances[*].[Tags[?Key=='Name'].Value | \
    [0], PublicDnsName]" \
    --filters Name=instance-state-name,Values=running Name=tag:Name,Values=nat-az-1 --output text | \
    tr ' ' '-' | \
    column -t -s $'\t' | awk '{print $2}')

  ip=$(aws ec2 describe-instances \
    --query "Reservations[*].Instances[*].[Tags[?Key=='Name'].Value | \
    [0], LaunchTime, PublicDnsName,PrivateIpAddress]" \
    --filters Name=instance-state-name,Values=running Name=tag:Name,Values=gitlab-runner --output text | \
    tr ' ' '-' | \
    column -t -s $'\t' | fzf | awk '{print $4}')

  ssh -i ~/.ssh/keys/dominium-gitlab-runner ubuntu@$ip -o "proxycommand ssh -W %h:%p -i ~/.ssh/keys/dominium-gitlab-runner ec2-user@$natdns"
}
# fuzzy search and describe kubernetes objects
function fkd() {
  local types="pod\nservice\ningress\ndeployment\nstatefulset\nconfigmap\nsecret"
  local object=$(echo $types | fzf)
  local instance

  instance=$(kubectl get $object | fzf | awk '{print $1}')

  if [[ "$object" == "configmap" || "$object" == "secret" ]]; then
    kubectl get $object $instance -oyaml
  else
    kubectl describe $object $instance
  fi
}

# suffix aliases
alias -s md='vim'
alias -s js='node'
function extract() {
  case $1 in
    *.tar.gz|*.tgz) tar xzvf "$1";;
    *.tar.xz) tar Jxvf "$1";;
    *.zip) unzip "$1";;
    *.lzh) lha e "$1";;
    *.tar.bz2|*.tbz) tar xjvf "$1";;
    *.tar.Z) tar zxvf "$1";;
    *.gz) gzip -d "$1";;
    *.bz2) bzip2 -dc "$1";;
    *.Z) uncompress "$1";;
    *.tar) tar xvf "$1";;
    *.arj) unarj "$1";;
  esac
}
alias -s {gz,tgz,zip,lzh,bz2,tbz,Z,tar,arj,xz}=extract

# update list of installed brews and casks in dotfiles
function update-brews() {
  brew list > ~/dev/dotfiles/brews
  brew cask list > ~/dev/dotfiles/casks
  brew tap > ~/dev/dotfiles/taps
}

jdk() {
   version=$1
   export JAVA_HOME=$(/usr/libexec/java_home -v"$version");
   java -version
 }

alias note="vim ${HOME}/notes/$(date +%d-%m-%Y).md"
